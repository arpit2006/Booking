# Generated by Django 5.2.6 on 2025-09-16 14:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('general', 'General'), ('room', 'Room'), ('bathroom', 'Bathroom'), ('entertainment', 'Entertainment'), ('connectivity', 'Connectivity'), ('food_drink', 'Food & Drink'), ('wellness', 'Wellness & Spa'), ('business', 'Business'), ('family', 'Family'), ('accessibility', 'Accessibility')], max_length=20)),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_premium', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Amenities',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HotelChain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo', models.ImageField(blank=True, upload_to='hotel_chains/')),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('star_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
            options={
                'verbose_name': 'Hotel Chain',
                'verbose_name_plural': 'Hotel Chains',
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('single', 'Single Room'), ('double', 'Double Room'), ('twin', 'Twin Room'), ('triple', 'Triple Room'), ('quad', 'Quad Room'), ('suite', 'Suite'), ('junior_suite', 'Junior Suite'), ('presidential_suite', 'Presidential Suite'), ('deluxe', 'Deluxe Room'), ('standard', 'Standard Room'), ('superior', 'Superior Room'), ('family', 'Family Room'), ('studio', 'Studio'), ('apartment', 'Apartment'), ('villa', 'Villa'), ('penthouse', 'Penthouse')], max_length=50)),
                ('display_name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('max_occupancy', models.PositiveIntegerField(default=2)),
                ('max_adults', models.PositiveIntegerField(default=2)),
                ('max_children', models.PositiveIntegerField(default=0)),
                ('bed_type', models.CharField(choices=[('single', 'Single Bed'), ('double', 'Double Bed'), ('queen', 'Queen Bed'), ('king', 'King Bed'), ('twin', 'Twin Beds'), ('sofa_bed', 'Sofa Bed'), ('bunk_bed', 'Bunk Bed')], default='double', max_length=20)),
                ('bed_count', models.PositiveIntegerField(default=1)),
                ('room_size', models.PositiveIntegerField(blank=True, help_text='Size in square meters', null=True)),
                ('has_balcony', models.BooleanField(default=False)),
                ('has_sea_view', models.BooleanField(default=False)),
                ('has_city_view', models.BooleanField(default=False)),
                ('has_garden_view', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Room Type',
                'verbose_name_plural': 'Room Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('state_province', models.CharField(blank=True, max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('is_popular', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, upload_to='cities/')),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['country', 'name'],
                'unique_together': {('name', 'country')},
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField(blank=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('hotel_type', models.CharField(choices=[('hotel', 'Hotel'), ('resort', 'Resort'), ('motel', 'Motel'), ('hostel', 'Hostel'), ('apartment', 'Apartment'), ('villa', 'Villa'), ('guesthouse', 'Guest House'), ('bnb', 'Bed & Breakfast'), ('boutique', 'Boutique Hotel')], default='hotel', max_length=20)),
                ('address', models.TextField()),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(help_text='Brief description for search results', max_length=300)),
                ('star_rating', models.PositiveIntegerField(help_text='Official hotel star rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('guest_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base price per night', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('main_image', models.ImageField(blank=True, upload_to='hotels/main/')),
                ('license_number', models.CharField(blank=True, max_length=100)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('check_in_time', models.TimeField(default='15:00')),
                ('check_out_time', models.TimeField(default='11:00')),
                ('cancellation_policy', models.TextField(blank=True)),
                ('pet_policy', models.TextField(blank=True)),
                ('smoking_policy', models.CharField(choices=[('no_smoking', 'No Smoking'), ('smoking_rooms', 'Smoking Rooms Available'), ('designated_areas', 'Designated Smoking Areas')], default='no_smoking', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, to='hotels.amenity')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.city')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_hotels', to=settings.AUTH_USER_MODEL)),
                ('chain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hotels.hotelchain')),
            ],
            options={
                'ordering': ['-is_featured', '-guest_rating', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_reference', models.CharField(editable=False, max_length=20, unique=True)),
                ('confirmation_code', models.CharField(default='DEFAULT', editable=False, max_length=8, unique=True)),
                ('guest_name', models.CharField(default='Guest', max_length=200)),
                ('guest_email', models.EmailField(default='guest@example.com', max_length=254)),
                ('guest_phone', models.CharField(max_length=20)),
                ('check_in', models.DateField(db_index=True)),
                ('check_out', models.DateField(db_index=True)),
                ('adults', models.PositiveIntegerField(default=1)),
                ('children', models.PositiveIntegerField(default=0)),
                ('infants', models.PositiveIntegerField(default=0)),
                ('room_total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('checked_in', 'Checked In'), ('checked_out', 'Checked Out'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('special_requests', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True, help_text='For hotel staff only')),
                ('actual_check_in', models.DateTimeField(blank=True, null=True)),
                ('actual_check_out', models.DateTimeField(blank=True, null=True)),
                ('early_check_in_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('late_check_out_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('cancellation_date', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('cancellation_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('booking_source', models.CharField(choices=[('website', 'Website'), ('mobile_app', 'Mobile App'), ('phone', 'Phone'), ('email', 'Email'), ('walk_in', 'Walk-in'), ('third_party', 'Third Party')], default='website', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='hotels.hotel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HotelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='hotels/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hotels.hotel')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(editable=False, max_length=50, unique=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('paypal', 'PayPal'), ('stripe', 'Stripe'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('wallet', 'Digital Wallet')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='hotels.booking')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=20)),
                ('floor', models.PositiveIntegerField(blank=True, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('weekend_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('peak_season_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('special_features', models.TextField(blank=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_accessible', models.BooleanField(default=False)),
                ('is_smoking_allowed', models.BooleanField(default=False)),
                ('main_image', models.ImageField(blank=True, upload_to='rooms/main/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, to='hotels.amenity')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='hotels.hotel')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.roomtype')),
            ],
            options={
                'ordering': ['hotel', 'floor', 'room_number'],
            },
        ),
        migrations.CreateModel(
            name='BookingRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('nights', models.PositiveIntegerField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.booking')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='hotels.room')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='rooms',
            field=models.ManyToManyField(through='hotels.BookingRoom', to='hotels.room'),
        ),
        migrations.CreateModel(
            name='RoomImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='rooms/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hotels.room')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['city', 'is_active'], name='hotels_hote_city_id_fb7985_idx'),
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['guest_rating'], name='hotels_hote_guest_r_49090d_idx'),
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['created_at'], name='hotels_hote_created_f0e25a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bookingroom',
            unique_together={('booking', 'room')},
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['user', 'status'], name='hotels_book_user_id_c709d3_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['hotel', 'check_in'], name='hotels_book_hotel_i_61bfaa_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status', 'check_in'], name='hotels_book_status_8f8433_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['booking_reference'], name='hotels_book_booking_58fdbd_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['hotel', 'is_available'], name='hotels_room_hotel_i_134e5e_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['room_type'], name='hotels_room_room_ty_bf3be1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('hotel', 'room_number')},
        ),
    ]
